# import packages and functions
import numpy as np
from pyrootmemo.tools.helpers import units
from pyrootmemo.geometry import FailureSurface
from pyrootmemo.materials import MultipleRoots
from pint import Quantity


# WWM class
class Wwm():
    """
    Class for Wu/Waldron Model.
           
    The class constains some additional methods:
    * 'peak_force()': calculate peak force in root bundle (sum of strenghts)
    * 'peak_reinforcement()': calculate peak root reinforcement, given a known
      soil area and Wu/Waldron orientation factor 'k'
    
    """

    # initialise class
    def __init__(
            self, 
            roots: MultipleRoots,
            ) -> None:
        """
        Initiate RBMw bundle model class

        Parameters
        ----------
        roots : instance of MultipleRoots class. 
            Must contain attributes 'diameter', 'xsection', 'tensile_strength'

        Returns
        -------
        None.

        """
        # check if roots contains all required instances
        instances_required = ['diameter', 'xsection', 'tensile_strength']
        for i in instances_required:
            if not hasattr(roots, i):
                AttributeError('roots does not contain ' + str(i) + ' attribute')
        # set parameters
        self.roots = roots


    # Calculate peak force 
    def peak_force(
            self
            ) -> Quantity:
        """
        Calculate WWM peak force

        Sum of maximum tensile forces in all roots
        """
        # force
        force = np.sum(self.roots.xsection * self.roots.tensile_strength)
        # return
        return(force)


    # reinforcement
    def peak_reinforcement(
            self, 
            failure_surface: FailureSurface,
            k: float = 1.2
            ) -> Quantity:
        """
        Calculate peak reinforcement (largest soil reinforcement at any point)
        generated by the fibre bundle

        Parameters
        ----------
        failure_surface : FailureSurface
            Instance of "FailureSurface" class. Must contain the attribute 
            "cross_sectional_area" that contains the cross-sectinonal area of the
            failure surface
        k : float, optional
            Wu/Waldron reinforcement orientation factor. The default is 1.2.

        Returns
        -------
        float
            peak root reinforcement.

        """
        # check cross-sectional area correctly defined
        if not isinstance(failure_surface, FailureSurface):
            TypeError('failure_surface must be intance of FailureSurface class')
        if not hasattr(failure_surface, 'cross_sectional_area'):
            AttributeError('Failure surface does not contain attribute "cross_sectional_area"')
        # return
        return(k * self.peak_force() / failure_surface.cross_sectional_area)
